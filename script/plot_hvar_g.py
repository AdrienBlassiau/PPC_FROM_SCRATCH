import matplotlib.pyplot as plt
import numpy as np
from statistics import mean, variance, stdev, pstdev

## HVAR G

# t2 = np.array(["queen5_5","queen6_6","queen7_7","queen8_8","myciel3","myciel4","myciel5","myciel6"])
t2 = np.arange(7)

h1c = np.array([26,5417,239,11,23,47,95]).astype(np.double)
h1cmask = np.isfinite(h1c)
h2c = np.array([26,5417,239,11,23,47,95]).astype(np.double)
h2cmask = np.isfinite(h2c)
h3c = np.array([97,123671,None,12,23,47,95]).astype(np.double)
h3cmask = np.isfinite(h3c)
h4c = np.array([26,5417,239,11,23,47,9]).astype(np.double)
h4cmask = np.isfinite(h4c)
h5c = np.array([27,7298,63232,11,23,47,95]).astype(np.double)
h5cmask = np.isfinite(h5c)
h6c = np.array([742,None,None,11,23,47,95]).astype(np.double)
h6cmask = np.isfinite(h6c)
h7c = np.array([26,42962,1596,11,23,47,95]).astype(np.double)
h7cmask = np.isfinite(h7c)
h8c = np.array([26,5417,239,11,23,47,95]).astype(np.double)
h8cmask = np.isfinite(h8c)
h9c = np.array([26,6411,239,11,23,47,95]).astype(np.double)
h9cmask = np.isfinite(h9c)
h10c = np.array([26,5712,244,11,23,47,95]).astype(np.double)
h10cmask = np.isfinite(h10c)


plt.plot(t2[h1cmask], h1c[h1cmask], "o:", markersize=4)
plt.plot(t2[h2cmask], h2c[h2cmask], "o:", markersize=4)
plt.plot(t2[h3cmask], h3c[h3cmask], "o:", markersize=4)
plt.plot(t2[h4cmask], h4c[h4cmask], "o:", markersize=4)
plt.plot(t2[h5cmask], h5c[h5cmask], "o:", markersize=4)
plt.plot(t2[h6cmask], h6c[h6cmask], "o:", markersize=4)
plt.plot(t2[h7cmask], h7c[h7cmask], "o:", markersize=4)
plt.plot(t2[h8cmask], h8c[h8cmask], "o:", markersize=4)
plt.plot(t2[h9cmask], h9c[h9cmask], "o:", markersize=4)
plt.plot(t2[h10cmask], h10c[h10cmask], "o:", markersize=4)
plt.yscale("log")
plt.title("Nombre de branchements en fonction du graphe choisi")
plt.legend(['lex','invlex','random','dom','deg','ddeg','wdeg','dom_deg','dom_ddeg','dom_wdeg'])
plt.xlabel("Graphe choisi")
plt.ylabel("Nombre de branchements")
plt.show()


t2 = np.arange(7)

h1d = np.array([0.000172,0.037380,0.003346,0.000029,0.000112,0.000447,0.002289]).astype(np.double)
h1dmask = np.isfinite(h1d)
h2d = np.array([0.000160,0.037277,0.003763,0.000028,0.000101,0.000457,0.002135]).astype(np.double)
h2dmask = np.isfinite(h2d)
h3d = np.array([0.000134,0.037277,None,6.544924,0.000031,0.000111,0.000481]).astype(np.double)
h3dmask = np.isfinite(h3d)
h4d = np.array([0.000157,0.037922,0.003893,0.000028,0.000129,0.000431,0.002058]).astype(np.double)
h4dmask = np.isfinite(h4d)
h5d = np.array([0.000157,0.048972,0.962316,0.000029,0.000106,0.000451,0.002153]).astype(np.double)
h5dmask = np.isfinite(h5d)
h6d = np.array([0.004648,None,None,0.000032,0.000132,0.000676,0.005418]).astype(np.double)
h6dmask = np.isfinite(h6d)
h7d = np.array([0.000211,0.572724,0.053714,0.000035,0.000145,0.001453,0.004364]).astype(np.double)
h7dmask = np.isfinite(h7d)
h8d = np.array([0.000149,0.037530,0.003981,0.000029,0.000108,0.000474,0.002120]).astype(np.double)
h8dmask = np.isfinite(h8d)
h9d = np.array([0.000188,0.061914,0.005189,0.000033,0.000136,0.000682,0.005425]).astype(np.double)
h9dmask = np.isfinite(h9d)
h10d = np.array([0.000212,0.054771,0.006283,0.000034,0.000147,0.000780,0.004670]).astype(np.double)
h10dmask = np.isfinite(h10d)


plt.plot(t2[h1dmask], h1d[h1dmask], "o:", markersize=4)
plt.plot(t2[h2dmask], h2d[h2dmask], "o:", markersize=4)
plt.plot(t2[h3dmask], h3d[h3dmask], "o:", markersize=4)
plt.plot(t2[h4dmask], h4d[h4dmask], "o:", markersize=4)
plt.plot(t2[h5dmask], h5d[h5dmask], "o:", markersize=4)
plt.plot(t2[h6dmask], h6d[h6dmask], "o:", markersize=4)
plt.plot(t2[h7dmask], h7d[h7dmask], "o:", markersize=4)
plt.plot(t2[h8dmask], h8d[h8dmask], "o:", markersize=4)
plt.plot(t2[h9dmask], h9d[h9dmask], "o:", markersize=4)
plt.plot(t2[h10dmask], h10d[h1dmask], "o:", markersize=4)
plt.yscale("log")
plt.title("Temps de calcul en fonction du graphe choisi")
plt.legend(['lex','invlex','random','dom','deg','ddeg','wdeg','dom_deg','dom_ddeg','dom_wdeg'])
plt.xlabel("Graphe choisi")
plt.ylabel("Temps de calcul (en s)")
plt.show()

